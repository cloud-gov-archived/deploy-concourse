---
jobs:
- name: deploy-concourse-production
  serial: true
  plan:
  - in_parallel:
    - get: concourse-deployment
      trigger: true
    - get: concourse-config
      trigger: true
    - get: terraform-yaml
    - get: common
      resource: common-production
      trigger: true
    - get: concourse-stemcell-jammy
      trigger: true
  - put: concourse-production-deployment
    params:
      #<<: *deploy-params
      ops_files:
      - concourse-deployment/cluster/operations/basic-auth.yml
      - concourse-deployment/cluster/operations/external-postgres.yml
      - concourse-deployment/cluster/operations/external-postgres-tls.yml
      - concourse-deployment/cluster/operations/scale.yml
      - concourse-config/operations/iaas-worker.yml
      - concourse-config/operations/latest-stemcell.yml
      - concourse-config/operations/postgres-production.yml
      - concourse-config/operations/driver.yml
      - concourse-config/operations/config.yml
      - concourse-config/operations/generic-oauth.yml
      - concourse-config/operations/compliance.yml
      - concourse-config/operations/prometheus.yml
      vars_files:
      - concourse-deployment/versions.yml
      - concourse-config/variables/development.yml
      - concourse-config/variables/postgres-tls.yml
      - terraform-yaml/state.yml
      - common/secrets.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy DEV Concourse on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed DEV Concourse on production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

resources:
- name: concourse-deployment
  type: git
  source:
    uri: https://github.com/concourse/concourse-bosh-deployment
    branch: master

- name: concourse-config
  type: git
  source:
    uri: ((concourse-config-git-url))
    branch: ((concourse-config-git-branch))

- name: common-production
  type: cg-common
  source:
    bucket_name: ((secrets-bucket))
    region: ((aws-region))
    secrets_file: concourse-tooling-prod.yml
    secrets_passphrase: ((concourse-production-private-passphrase))

- name: concourse-stemcell-jammy
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-jammy-go_agent

- name: concourse-production-deployment
  type: bosh-deployment
  source:
    target: ((concourse-production-deployment-bosh-target))
    client: ci
    client_secret: ((tooling_bosh_uaa_ci_client_secret))
    deployment: ((concourse-production-deployment-bosh-deployment))
    ca_cert: ((common_ca_cert_store))

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: terraform-yaml
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file))
    region_name: ((aws-region))

resource_types:
- name: slack-notification
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: slack-notification-resource
    aws_region: us-gov-west-1
    tag: latest

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
